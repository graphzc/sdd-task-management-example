// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/graphzc/sdd-task-management-example/cmd/api/server"
	"github.com/graphzc/sdd-task-management-example/internal/config"
	"github.com/graphzc/sdd-task-management-example/internal/handlers"
	"github.com/graphzc/sdd-task-management-example/internal/handlers/auth"
	"github.com/graphzc/sdd-task-management-example/internal/handlers/common"
	task3 "github.com/graphzc/sdd-task-management-example/internal/handlers/task"
	"github.com/graphzc/sdd-task-management-example/internal/infrastructure/context"
	"github.com/graphzc/sdd-task-management-example/internal/infrastructure/database"
	"github.com/graphzc/sdd-task-management-example/internal/middlewares"
	"github.com/graphzc/sdd-task-management-example/internal/repositories/task"
	"github.com/graphzc/sdd-task-management-example/internal/repositories/user"
	task2 "github.com/graphzc/sdd-task-management-example/internal/services/task"
	user2 "github.com/graphzc/sdd-task-management-example/internal/services/user"
)

// Injectors from wire.go:

func InitializeAPI() *server.EchoServer {
	configConfig := config.NewConfig()
	handler := common.New()
	contextContext := context.NewContext()
	db := database.NewSQLXClient(contextContext, configConfig)
	repository := user.NewRepository(db)
	service := user2.NewService(configConfig, repository)
	authHandler := auth.New(service)
	taskRepository := task.NewRepository(db)
	taskService := task2.NewService(configConfig, taskRepository)
	taskHandler := task3.New(taskService)
	handlersHandlers := handlers.NewHandlers(handler, authHandler, taskHandler)
	authMiddleware := middlewares.NewAuthMiddleware(configConfig)
	echoServer := server.NewEchoServer(configConfig, handlersHandlers, authMiddleware)
	return echoServer
}
